# version string format -- This will be overwritten later anyway
version: "{build}"

branches:
  except:
    - /dev-travis.+/

os:
  - Visual Studio 2019

environment:
    matrix:
#        - additional_flags: "/permissive- /std:c++latest"
#          wmain: 0
#
        - additional_flags: ""
          wmain: 0
#
#        - additional_flags: "/D_UNICODE /DUNICODE"
#          wmain: 1
#          coverage: 0



matrix:
    exclude:
        - os: Visual Studio 2015
          additional_flags: "/permissive- /std:c++latest"

        - os: Visual Studio 2015
          additional_flags: "/D_UNICODE /DUNICODE"

        # Exclude unwanted coverage configurations
        - coverage: 1
          platform: Win32

        - coverage: 1
          os: Visual Studio 2015

        - coverage: 1
          configuration: Release

        # Exclude unwanted examples configurations
        - examples: 1
          platform: Win32

        - examples: 1
          os: Visual Studio 2015

        - examples: 1
          configuration: Release


# Win32 and x64 are CMake-compatible solution platform names.
# This allows us to pass %PLATFORM% to CMake -A.
platform:
  - x64
  - Win32

# build Configurations, i.e. Debug, Release, etc.
configuration:
  - Release
#  - Debug

#Cmake will autodetect the compiler, but we set the arch
before_build:
  - choco upgrade cmake
  - set path=C:\Program Files\CMake\bin;%path%
  - set CXXFLAGS=%additional_flags%
  # Indirection because appveyor doesn't handle multiline batch scripts properly
  # https://stackoverflow.com/questions/37627248/how-to-split-a-command-over-multiple-lines-in-appveyor-yml/37647169#37647169
  # https://help.appveyor.com/discussions/questions/3888-multi-line-cmd-or-powershell-warning-ignore
  - cmd: cmake -H. -BBuild -A%PLATFORM% -DUSE_WMAIN=%wmain% || exit /b !ERRORLEVEL!


build_script:
  - cd Build
  - cmake  ..
  - cmake --build . --config %CONFIGURATION%

test_script:
  - set CTEST_OUTPUT_ON_FAILURE=1
  - cmd: ..\misc\appveyorTestRunScript.bat
